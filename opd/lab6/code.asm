	ORG 0x0 	; Инициализация векторов прерывания
V0: WORD $DEFAULT, 0x180	; Вектор прерывания #0
V1: WORD $INT1, 0x180	; Вектор прерывания #1
V2: WORD $INT2, 0x180	; Вектор прерывания #2
V3: WORD $DEFAULT, 0x180	; Вектор прерывания #3
V4: WORD $DEFAULT, 0x180	; Вектор прерывания #4
V5: WORD $DEFAULT, 0x180	; Вектор прерывания #5
V6: WORD $DEFAULT, 0x180	; Вектор прерывания #6
V7: WORD $DEFAULT, 0x180	; Вектор прерывания #7
			
	ORG 0x28		
X: WORD ?		; Переменная
			
MIN: WORD 0xFFE1	; Минимальное значение X {-31}
MAX: WORD 0x0020	; Максимальное значение X {32}
			
DEFAULT: IRET	; Обработка прерываний по умолчанию	
	ORG 0x35
START:	
	DI	; Запрет прерываний на период загрузки
	CLA	; Заносим 0 в AC
	OUT 0x1	; MR КВУ-0 на вектор 0
	OUT 0x7 	; MR КВУ-3 на вектор 0 
	OUT 0xB 	; MR КВУ-4 на вектор 0 
	OUT 0xE 	; MR КВУ-5 на вектор 0 
	OUT 0x12 	; MR КВУ-6 на вектор 0 
	OUT 0x16 	; MR КВУ-7 на вектор 0 
	OUT 0x1A 	; MR КВУ-8 на вектор 0 
	OUT 0x1E 	; MR КВУ-9 на вектор 0	
	LD #0x9 	; Разрешить прерывания на вектор 1 
	OUT 0x3 	; (1000 | 0001 = 1001) в MR КВУ-1 
	LD #0xA 	; Разрешить прерывания на вектор 2 
	OUT 0x5 	; (1000 | 0010 = 1010) в MR КВУ-2 
	EI 	; Разрешение прерываний			
; Основная программа 
PROG:
	DI 	; Запрет прерываний для безопасного доступа к памяти 
	LD X 	; Загрузка переменной 
	EI 	; Разрешение прерываний			
	SUB #2 	; Уменьшение AC 
	CALL CHECK 	; Проверка принадлежности ОДЗ 
	DI 	; Запрет прерываний для безопасного доступа к памяти 
	ST X 	; Сохранение переменной 
	EI 	; Разрешение прерываний 
	JUMP PROG 	; Циклический переход
; Обработка прерывания ВУ-1 
INT1:
	CALL CHECK 	; Проверка принадлежности ОДЗ 
	PUSH 	; Сохранили AC в стек 
	HLT 	; Отладочная точка останова 
ASL 
ASL 
SUB #0x3
	OUT 0x2 	; Вывод результата на ВУ-1 
	HLT 	; Отладочная точка останова 
	POP 	; Возврат значения AC 
	IRET 	; Возврат из прерывания	
; Обработка прерывания ВУ-2 
INT2: 
	CALL CHECK 	; Проверка принадлежности ОДЗ 
	PUSH 	; Сохранили AC в стек 
	HLT 	; Отладочная точка останова			
	CLA 	; Очистка AC
	IN 0x4 	; Прочитали данные с ВУ-2
	SXTB	; Расширение знака для корректной работы
	HLT 	; Отладочная точка останова 
	PUSH	; Сохранили DR в стек 
	ASL	; Удвоенное значение DR
	ADD (SP+0)	; Добавляем значение DR
	ADD (SP+1)	; Складываем с X
	HLT 	; Отладочная точка останова			
	ST (SP+1) 	; Сохранили результат в X 
	HLT 	; Отладочная точка останова 
	POP	; Убрали DR из стека
	POP 	; Вернули АС 
	IRET 	; Возврат из прерывания				
; Проверка принадлежности ОДЗ 
; Проверяет значения из AC 
; Если значение не принадлежит ОДЗ то оно приводиться к нему 
CHECK: 
	CMP $MIN 	; Проверка на минимум 
	BGE CHECK_MAX 	; x >= MIN, переход на проверку максимума 
	LD $MAX	; Сохранение максимума 
	JUMP RETURN 	; Выход из функции 
CHECK_MAX: 
	CMP $MAX 	; Сравнение с максимумом 
	BLT RETURN 	; Возврат если x < MAX
	LD $MAX 	; Сохранение максимального значения 
RETURN: RET
